.{
    .name = .destruct,
    // This is a [Semantic Version](https://semver.org/).
    // In a future version of Zig it will be used for package deduplication.
    .version = "0.0.1",

    // This field is optional.
    // This is currently advisory only; Zig does not yet do anything with this value.
    .minimum_zig_version = "0.14.0",

    // This field is optional.
    // Each dependency must either provide a `url` and `hash`, or a `path`.
    // `zig build --fetch` can be used to fetch all dependencies of a package, recursively.
    // Once all dependencies are fetched, `zig build` no longer requires
    // internet connectivity.
    .dependencies = .{
        .assets = .{
            .path = "assets",
        },
        .sdl = .{
            .path = "external_libs/sdl",
        },
        .emsdk = .{
            .url = "https://github.com/emscripten-core/emsdk/archive/refs/tags/3.1.64.tar.gz",
            .hash = "12206bb1c8206a3e50d43db0711e6b9e0485758265abadf6ffccee37839bb0283c6e",
        },
    },

    .paths = .{
        // This makes *all* files, recursively, included in this package. It is generally
        // better to explicitly list the files and directories instead, to insure that
        // fetching from tarballs, file system paths, and version control all result
        // in the same contents hash.
        "build.zig",
        "build.zig.zon",
        "src",
        "assets",
        "README.md",
        "COPYING",
    },

    .fingerprint = 0xe35d64e7929178f5,
}
